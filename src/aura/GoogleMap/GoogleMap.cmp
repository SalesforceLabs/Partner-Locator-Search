<!--
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
-->
<aura:component implements="force:hasRecordId" access="global">
    <!-- Needed to send messages to VF page. But we will get it from VF itself -->
    <aura:attribute name="vfHost" type="String" default="" access="global" />

    <!-- recordId attribute is not needed when using in one.app but adding it here as need to test it with DemoApp.app -->
    <aura:attribute name="recordId" type="ID" access="global" />

    <!-- Google Map options -->
    <aura:attribute name="mapOptions" type="Object" default='{"zoom": 4}' access="global" />
    <!-- 
		Goole map option to set center becasue it's required in following format
		{"lat":-25.363882, "lng":131.044922}
	 -->
    <aura:attribute name="mapOptionsCenter" type="Object" access="global" />
    <!--
		Google map data for marker in following format
		[{"lat":-25.363882, "lng":131.044922, "markerText":"This is an account"}]
   	-->
    <aura:attribute name="mapData" type="Object[]" access="global" />

    <aura:attribute name="loadMap" type="Boolean" default="false" access="global" />

    <!-- Domain of LC for VF to send message -->
    <aura:attribute name="lcHost" type="String" access="global" />

    <aura:handler event="c:PartnerListPageEvt" action="{!c.handleNewAccounts}" />

    <aura:attribute name="isPreview" type="Boolean" default="false" access="global" />

    <aura:attribute name="height" type="String" default="600" access="global" />
    <aura:attribute name="width" type="String" default="100%" access="global" />

    <aura:attribute name="apiKey" type="String" default="" access="global" />

    <!-- Set listener from VF. This is to check when VF is loaded so we can send marker data -->
    <ltng:require scripts="{!$Resource.PartnerLocatorjQuery}" afterScriptsLoaded="{!c.doInit}" />

    <div class="slds-is-relative">
        <div id="{!'preview_'+globalId}" class="{! v.isPreview == true ? 'preview-block' : 'slds-hide preview-block'}">
            <div class="innerContainer">
                <div class="halfHeight">
                    <h5 class="infoText">Google Map will appear here at runtime at size:</h5>
                    <p class="largeWidthHeight">{!v.height+'px'}</p>
                </div>
            </div>
        </div>
        <aura:if isTrue="{!!v.isPreview}">
            <div class="map_wrapper">
                <iframe id="{!'map_'+globalId}" class="theiFrame mapSize" aura:id="vfFrame" src="{!$SfdcSite.pathPrefix + '/apex/GoogleMap?lcHost='+v.lcHost+'&amp;height='+v.height+'&amp;apiKey='+v.apiKey}" frameborder="0" />
                <lightning:spinner aura:id="mySpinner" variant="brand" size="large" class="map_spinner" />
            </div>
        </aura:if>
    </div>
</aura:component>