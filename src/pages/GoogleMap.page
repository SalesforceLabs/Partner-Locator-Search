<apex:page showHeader="false">
    <html>
        <head>
            <!-- 
				This stylesheet contains specific styles for displaying the map on this page. Replace it with your own styles as described in the documentation:
				https://developers.google.com/maps/documentation/javascript/tutorial 
			-->
            <link rel="stylesheet" href="//developers.google.com/maps/documentation/javascript/demos/demos.css"/>
        </head>
        <style>
        	#map{
            	width: 100%;
            	height: {!$CurrentPage.parameters.height+'px'};
            }
        </style>
        <body>
            
            <div id="map"></div>
            <apex:includeScript value="https://maps.googleapis.com/maps/api/js?key={!JSENCODE($CurrentPage.parameters.apiKey)}"/>
            <script>
            
			var lexOrigin = '{! "https://"+$CurrentPage.parameters.lcHost}';
            var theMarkers = [];
            //Receive message from LC
            window.addEventListener("message", function(event) {
                //If page is public (like used in force.com sites) then be careful about the origin
                
                // Handle message
                console.log('Data Sent to VF: ', event.data);
                data = event.data;
                
                if (event.origin !== lexOrigin) {
                    // Not the expected origin: reject message!
                    return;
                }
                else{
                    if(typeof(event.data.loadGoogleMap) != 'undefined'){
                        //Load Google Map Script
                        if(event.data.loadGoogleMap){
                            /*
                            var script = document.createElement("script");
                            //script.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyDAK-0s1G6DScmEgpQnmIh65a2TbKv4TTI&callback=initMap";
                            //script.src = "{!$Resource.GoogleMapApi}";
                            script.src = event.data.googleMapScript;
                            document.getElementsByTagName("head")[0].appendChild(script);
                            */
                        	initMap();
                    	}
                        else{
                            refreshMap();
                        }
                    }
                }
            }, false);

            //Data for Google map
            var data;
            var map;
            //Send message to LC
            function sendToLC(message) {
                if(typeof(lexOrigin) != 'undefined'){
	                parent.postMessage(message, lexOrigin);
                }
            }

            sendToLC({'state':'LOADED', 'vfHost': "{!LEFT($CurrentPage.URL,FIND('/',$CurrentPage.URL,9))}"});
            
            //Callback when Google Map is loaded
            function initMap() {
                //Add marker for each point along with text
                console.log('initMap');
                function addMarker(feature) {
                    var image = {
                        url: '{!$Resource.PartnerLocator_AccountIcon}',
                        // This marker is 20 pixels wide by 32 pixels high.
                        size: new google.maps.Size(36, 36),
                        // The origin for this image is (0, 0).
                        origin: new google.maps.Point(0, 0),
                        // The anchor for this image is the base of the flagpole at (0, 32).
                        anchor: new google.maps.Point(18, 36)
                    };
                    var marker = new google.maps.Marker({
                        position: feature.position,
                        icon: image,
                        map: map
                    });
                    
                    var infoWindow = new google.maps.InfoWindow({
                        content: feature.markerText
                    });
                    
                    marker.addListener('click', function() {
                        infoWindow.open(map, marker);
                    });
                    theMarkers.push(marker);
                }
                
                //Create new map
                map = new google.maps.Map(document.getElementById("map"), JSON.parse(data.mapOptions));
                
                //Set map center
                map.setCenter(data.mapOptionsCenter);
                
                //iterate through map data for each point (even if 1)
                var mapData = data.mapData;
                
                //Add marker for each point
                var j=mapData.length;
                for(var i=0; i<j; i++){
                    if(mapData[i].lat != null && mapData[i].lng != null){
                        var myLatlng = new google.maps.LatLng(mapData[i].lat, mapData[i].lng);
                        addMarker({position: myLatlng, markerText: mapData[i].markerText  });
                    }
                }
                showVisible();
                sendToLC({'state':'COMPLETED'});
            }
            
            function showVisible() {
                console.log('showVisible');
                var bounds = new google.maps.LatLngBounds();
                console.log('theMarkers: ', theMarkers);
                for(var i=0; i<theMarkers.length; i++) {
                    bounds.extend(theMarkers[i].getPosition());
                }
                if (bounds.getNorthEast().equals(bounds.getSouthWest())) {
                    var extendPoint1 = new google.maps.LatLng(bounds.getNorthEast().lat() + 0.01, bounds.getNorthEast().lng() + 0.01);
                    var extendPoint2 = new google.maps.LatLng(bounds.getNorthEast().lat() - 0.01, bounds.getNorthEast().lng() - 0.01);
                    bounds.extend(extendPoint1);
                    bounds.extend(extendPoint2);
                }
                if(theMarkers.length > 0){
                	map.fitBounds(bounds);
                }
                
            }
            
            function refreshMap() {
                //Add marker for each point along with text
                //Reset Markers var
                theMarkers = [];
                
                console.log('refreshMap');
                console.log('map: ', map);
                document.getElementById('map').innerHtml = '';
                function addMarker(feature) {
                    var image = {
                        url: '{!$Resource.PartnerLocator_AccountIcon}',
                        // This marker is 20 pixels wide by 32 pixels high.
                        size: new google.maps.Size(36, 36),
                        // The origin for this image is (0, 0).
                        origin: new google.maps.Point(0, 0),
                        // The anchor for this image is the base of the flagpole at (0, 32).
                        anchor: new google.maps.Point(18, 36)
                    };
                    var marker = new google.maps.Marker({
                        position: feature.position,
                        icon: image,
                        map: map
                    });
                    var infoWindow = new google.maps.InfoWindow({
                        content: feature.markerText
                    });
                    
                    marker.addListener('click', function() {
                        infoWindow.open(map, marker);
                    });
                    theMarkers.push(marker);
                }
                
                //Create new map
                map = new google.maps.Map(document.getElementById("map"), JSON.parse(data.mapOptions));
                
                //Set map center
                map.setCenter(data.mapOptionsCenter);
                
                //iterate through map data for each point (even if 1)
                var mapData = data.mapData;
                //Test
                    //Add marker for each point
                var j=mapData.length;
                for(var i=0; i<j; i++){
                    if(mapData[i].lat != null && mapData[i].lng != null){
                        var myLatlng = new google.maps.LatLng(mapData[i].lat, mapData[i].lng);
                        addMarker({position: myLatlng, markerText: mapData[i].markerText  });
                    }
                }
                showVisible();
            }
            
            //Let LC know that VF page been loaded along with it's URL
            //LC will then send the data
            //This is done because LC has no way to know that VF page in iFrame has been loaded, event listener set and ready for data

            </script>
    </body>
    </html>
</apex:page>